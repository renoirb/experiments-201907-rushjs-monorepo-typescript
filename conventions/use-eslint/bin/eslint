#!/usr/bin/env node

const { FileSystem } = require('@rushstack/node-core-library')
const { sep } = require('path')

/* eslint-disable */

/**
 * In Rush.js, if we do not use this script, we would need to import
 * the required module in EVERY PACKAGES.
 * This exposes it for other modules to use.
 */

// See comment also @renoirb/conventions-use-jest in reporter.js #IsCiServer
// https://docs.gitlab.com/ee/ci/variables/#syntax-of-environment-variables-in-job-scripts
const processEnvKeys = Object.keys(process.env);
const isCI = processEnvKeys.includes('CI_SERVER');

const [ nodeBin, nodeScript, ...cliArgs ] = process.argv

const hasReportUnusedDisableDirectives = cliArgs.includes(
  '--report-unused-disable-directives',
);
if (!isCI && !hasReportUnusedDisableDirectives) {
  cliArgs.unshift('--report-unused-disable-directives');
}
const hasConfigFile = cliArgs.includes(
  '--config',
  '-c',
);
if (!hasConfigFile) {
  const eslintFilePath = process.env.PWD + sep + '.eslintrc.js';
  const hasFile = FileSystem.exists(eslintFilePath)
  if (!hasFile) {
    const message = `.eslintrc.js not found in ${eslintFilePath}`
    throw new Error(message);
  }
  // Yeah, unshift makes us do this the other way around
  cliArgs.unshift(eslintFilePath);
  cliArgs.unshift(`--config`);
}

// Yeah, mutating the main process.argv should be fine
process.argv = [ nodeBin, nodeScript, ...cliArgs ];

Promise.all([require('eslint/bin/eslint.js')]);
